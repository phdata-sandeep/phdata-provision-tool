CREATE OR REPLACE PROCEDURE CDOPS_STATESTORE.MONITORING.SP_USERS_LOGIN_FAILURES()
RETURNS TABLE()
LANGUAGE SQL
AS
$$

BEGIN
LET res RESULTSET := (
      SELECT USER_NAME
FROM snowflake.account_usage.login_history
WHERE 
EVENT_TIMESTAMP >= dateadd(DAY, -1, current_timestamp())
AND IS_SUCCESS = 'NO'
GROUP BY USER_NAME
HAVING COUNT(*) > 5
);
RETURN TABLE(res);
END;
$$;


CREATE OR REPLACE PROCEDURE CDOPS_STATESTORE.MONITORING.SP_USERS_LOGIN_FAILURES_EMAIL()
RETURNS VARCHAR
LANGUAGE SQL
AS
$$
DECLARE

  c1 CURSOR FOR WITH email_body AS (
                  WITH query_wrapper AS (
                        SELECT USER_NAME
FROM snowflake.account_usage.login_history
WHERE 
EVENT_TIMESTAMP >= dateadd(DAY, -1, current_timestamp())
AND IS_SUCCESS = 'NO'
GROUP BY USER_NAME
HAVING COUNT(*) > 5
                  ) 
                  SELECT TO_VARCHAR(OBJECT_CONSTRUCT(*)) AS all_rows_string FROM query_wrapper
            )
            SELECT listagg(all_rows_string, '\n\n') as email_body_text FROM email_body;
    subj varchar;
    msg varchar;
  BEGIN
      OPEN c1;
      FETCH c1 INTO msg;
      msg := 'TO VIEW THE OUTPUT OF THE ALERT, RUN: \n CALL CDOPS_STATESTORE.MONITORING.SP_USERS_LOGIN_FAILURES();' || '\n\n OUTPUT OF ALERT:\n' || msg;
      subj := 'SNOWFLAKE ALERT - USERS_LOGIN_FAILURES - ACCOUNT ' || current_account() || ' - ' || current_timestamp();
      call system$send_email('RM_EMAIL_INT',:subj,:msg);
  END;
$$;


CREATE OR REPLACE ALERT CDOPS_STATESTORE.MONITORING.USERS_LOGIN_FAILURES
  WAREHOUSE = CDOPS_REPORT_WH
  SCHEDULE = 'using cron 0 6 * * * America/Los_Angeles'
  if (exists (
        CALL CDOPS_STATESTORE.MONITORING.SP_USERS_LOGIN_FAILURES()
     ))
  THEN
    CALL CDOPS_STATESTORE.MONITORING.SP_USERS_LOGIN_FAILURES_EMAIL();

ALTER ALERT CDOPS_STATESTORE.MONITORING.USERS_LOGIN_FAILURES RESUME;

CREATE OR REPLACE PROCEDURE CDOPS_STATESTORE.MONITORING.SP_USERS_WITH_A_PASSWORD_SET()
RETURNS TABLE()
LANGUAGE SQL
AS
$$

BEGIN
LET res RESULTSET := (
      SELECT
  'USER' AS OBJECT_TYPE,
  NAME AS OBJECT_NAME,
  FIRST_NAME,
  LAST_NAME,
  LOGIN_NAME,
  CREATED_ON,
  HAS_PASSWORD
FROM
  SNOWFLAKE.ACCOUNT_USAGE.USERS
WHERE
  PASSWORD_LAST_SET_TIME >= dateadd(DAY, -1, current_timestamp())
  AND HAS_PASSWORD
  AND DISABLED = 'false'
  AND DELETED_ON IS NULL
);
RETURN TABLE(res);
END;
$$;


CREATE OR REPLACE PROCEDURE CDOPS_STATESTORE.MONITORING.SP_USERS_WITH_A_PASSWORD_SET_EMAIL()
RETURNS VARCHAR
LANGUAGE SQL
AS
$$
DECLARE

  c1 CURSOR FOR WITH email_body AS (
                  WITH query_wrapper AS (
                        SELECT
  'USER' AS OBJECT_TYPE,
  NAME AS OBJECT_NAME,
  FIRST_NAME,
  LAST_NAME,
  LOGIN_NAME,
  CREATED_ON,
  HAS_PASSWORD
FROM
  SNOWFLAKE.ACCOUNT_USAGE.USERS
WHERE
  PASSWORD_LAST_SET_TIME >= dateadd(DAY, -30, current_timestamp())
  AND HAS_PASSWORD
  AND DISABLED = 'false'
  AND DELETED_ON IS NULL
                  ) 
                  SELECT TO_VARCHAR(OBJECT_CONSTRUCT(*)) AS all_rows_string FROM query_wrapper
            )
            SELECT listagg(all_rows_string, '\n\n') as email_body_text FROM email_body;
    subj varchar;
    msg varchar;
  BEGIN
      OPEN c1;
      FETCH c1 INTO msg;
      msg := 'TO VIEW THE OUTPUT OF THE ALERT, RUN: \n CALL CDOPS_STATESTORE.MONITORING.SP_USERS_WITH_A_PASSWORD_SET();' || '\n\n OUTPUT OF ALERT:\n' || msg;
      subj := 'SNOWFLAKE ALERT - USERS_WITH_A_PASSWORD_SET - ACCOUNT ' || current_account() || ' - ' || current_timestamp();
      call system$send_email('RM_EMAIL_INT',:subj,:msg);
  END;
$$;


CREATE OR REPLACE ALERT CDOPS_STATESTORE.MONITORING.USERS_WITH_A_PASSWORD_SET
  WAREHOUSE = CDOPS_REPORT_WH
  SCHEDULE = 'using cron 0 6 * * * America/Los_Angeles'
  if (exists (
        CALL CDOPS_STATESTORE.MONITORING.SP_USERS_WITH_A_PASSWORD_SET()
     ))
  THEN
    CALL CDOPS_STATESTORE.MONITORING.SP_USERS_WITH_A_PASSWORD_SET_EMAIL();

ALTER ALERT CDOPS_STATESTORE.MONITORING.USERS_WITH_A_PASSWORD_SET RESUME;

CREATE OR REPLACE PROCEDURE CDOPS_STATESTORE.MONITORING.SP_USERS_WITHOUT_LOG_IN_FOR_90_DAYS()
RETURNS TABLE()
LANGUAGE SQL
AS
$$

BEGIN
LET res RESULTSET := (
      SELECT
	LOGIN_NAME,
	DISPLAY_NAME,
	EMAIL,
	LAST_SUCCESS_LOGIN
FROM
    SNOWFLAKE.ACCOUNT_USAGE.USERS
WHERE
    LAST_SUCCESS_LOGIN >= dateadd(DAY, -90, current_timestamp())
    AND DELETED_ON IS NULL
    AND DISABLED = FALSE
);
RETURN TABLE(res);
END;
$$;


CREATE OR REPLACE PROCEDURE CDOPS_STATESTORE.MONITORING.SP_USERS_WITHOUT_LOG_IN_FOR_90_DAYS_EMAIL()
RETURNS VARCHAR
LANGUAGE SQL
AS
$$
DECLARE

  c1 CURSOR FOR WITH email_body AS (
                  WITH query_wrapper AS (
                        SELECT
	LOGIN_NAME,
	DISPLAY_NAME,
	EMAIL,
	LAST_SUCCESS_LOGIN
FROM
    SNOWFLAKE.ACCOUNT_USAGE.USERS
WHERE
    LAST_SUCCESS_LOGIN >= dateadd(DAY, -90, current_timestamp())
    AND DELETED_ON IS NULL
    AND DISABLED = FALSE
                  ) 
                  SELECT TO_VARCHAR(OBJECT_CONSTRUCT(*)) AS all_rows_string FROM query_wrapper
            )
            SELECT listagg(all_rows_string, '\n\n') as email_body_text FROM email_body;
    subj varchar;
    msg varchar;
  BEGIN
      OPEN c1;
      FETCH c1 INTO msg;
      msg := 'TO VIEW THE OUTPUT OF THE ALERT, RUN: \n CALL CDOPS_STATESTORE.MONITORING.SP_USERS_WITHOUT_LOG_IN_FOR_90_DAYS();' || '\n\n OUTPUT OF ALERT:\n' || msg;
      subj := 'SNOWFLAKE ALERT - USERS_WITHOUT_LOG_IN_FOR_90_DAYS - ACCOUNT ' || current_account() || ' - ' || current_timestamp();
      call system$send_email('RM_EMAIL_INT',:subj,:msg);
  END;
$$;


CREATE OR REPLACE ALERT CDOPS_STATESTORE.MONITORING.USERS_WITHOUT_LOG_IN_FOR_90_DAYS
  WAREHOUSE = CDOPS_REPORT_WH
  SCHEDULE = 'using cron 0 6 * * * America/Los_Angeles'
  if (exists (
        CALL CDOPS_STATESTORE.MONITORING.SP_USERS_WITHOUT_LOG_IN_FOR_90_DAYS()
     ))
  THEN
    CALL CDOPS_STATESTORE.MONITORING.SP_USERS_WITHOUT_LOG_IN_FOR_90_DAYS_EMAIL();

ALTER ALERT CDOPS_STATESTORE.MONITORING.USERS_WITHOUT_LOG_IN_FOR_90_DAYS RESUME;

CREATE OR REPLACE PROCEDURE CDOPS_STATESTORE.MONITORING.SP_WAREHOUSES_WITHOUT_A_RESOURCE_MONITOR()
RETURNS TABLE()
LANGUAGE SQL
AS
$$

DECLARE
presql RESULTSET DEFAULT (show warehouses in account);

BEGIN
LET res RESULTSET := (
      SELECT 
    "name", 
    "auto_resume", 
    "auto_suspend" 
From TABLE(RESULT_SCAN(LAST_QUERY_ID())) 
WHERE
    "resource_monitor" = 'null'
);
RETURN TABLE(res);
END;
$$;


CREATE OR REPLACE PROCEDURE CDOPS_STATESTORE.MONITORING.SP_WAREHOUSES_WITHOUT_A_RESOURCE_MONITOR_EMAIL()
RETURNS VARCHAR
LANGUAGE SQL
AS
$$
DECLARE

presql RESULTSET DEFAULT (show warehouses in account);

  c1 CURSOR FOR WITH email_body AS (
                  WITH query_wrapper AS (
                        SELECT 
    "name", 
    "auto_resume", 
    "auto_suspend" 
From TABLE(RESULT_SCAN(LAST_QUERY_ID())) 
WHERE
    "resource_monitor" = 'null'
                  ) 
                  SELECT TO_VARCHAR(OBJECT_CONSTRUCT(*)) AS all_rows_string FROM query_wrapper
            )
            SELECT listagg(all_rows_string, '\n\n') as email_body_text FROM email_body;
    subj varchar;
    msg varchar;
  BEGIN
      OPEN c1;
      FETCH c1 INTO msg;
      msg := 'TO VIEW THE OUTPUT OF THE ALERT, RUN: \n CALL CDOPS_STATESTORE.MONITORING.SP_WAREHOUSES_WITHOUT_A_RESOURCE_MONITOR();' || '\n\n OUTPUT OF ALERT:\n' || msg;
      subj := 'SNOWFLAKE ALERT - WAREHOUSES_WITHOUT_A_RESOURCE_MONITOR - ACCOUNT ' || current_account() || ' - ' || current_timestamp();
      call system$send_email('RM_EMAIL_INT',:subj,:msg);
  END;
$$;


CREATE OR REPLACE ALERT CDOPS_STATESTORE.MONITORING.WAREHOUSES_WITHOUT_A_RESOURCE_MONITOR
  WAREHOUSE = CDOPS_REPORT_WH
  SCHEDULE = 'using cron 0 6 * * * America/Los_Angeles'
  if (exists (
        CALL CDOPS_STATESTORE.MONITORING.SP_WAREHOUSES_WITHOUT_A_RESOURCE_MONITOR()
     ))
  THEN
    CALL CDOPS_STATESTORE.MONITORING.SP_WAREHOUSES_WITHOUT_A_RESOURCE_MONITOR_EMAIL();

ALTER ALERT CDOPS_STATESTORE.MONITORING.WAREHOUSES_WITHOUT_A_RESOURCE_MONITOR RESUME;